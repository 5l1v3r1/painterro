[1mdiff --git a/README.md b/README.md[m
[1mindex 72077b1..78f0079 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -147,11 +147,13 @@[m [mPainterro({[m
 |`initTextStyle` | Style of init text | "26px 'Open Sans', sans-serif" |[m
 |`pixelizePixelSize` | Default pixel size of pixelize tool. Can accept values - `x` - x pixels, `x%` - means percents of minimal area rectangle side | `20%` |[m
 |`changeHandler` | Function that will be called if something will be changed (painted, erased, resized, etc) | undefined |[m
[32m+[m[32m|`undoHandler` | Function that will be called if user will undo (Ctrl+Z) | undefined |[m
 |`availableLineWidths` | A list of the line width values that are available for selection in a drop down list e.g. `[1,2,4,8,16,64]`.  Otherwise an input field is used. | undefined |[m
 |`availableEraserWidths` | A list of the eraser width values that are available for selection in a drop down list e.g. `[1,2,4,8,16,64]`.  Otherwise an input field is used. | undefined |[m
 |`availableFontSizes` | A list of the font size values that are available for selection in a drop down list e.g. `[1,2,4,8,16,64]`.  Otherwise an input field is used. | undefined |[m
 |`toolbarPosition` | Whether to position the toolbar at the top or bottom. | 'bottom' |[m
 |`fixMobilePageReloader` | By default painterro adds overflow-y: hidden to page body on mobile devices to prevent "super smart" feature lice Chrom's reload page. Unfortunately we can't prevent it by preventDefault. If your want to scroll page when painterro is open, set this to false | true |[m
[32m+[m[32m|`language` | Language of the widget. |'en'[m
 [m
 UI color scheme[m
 ---------------[m
[36m@@ -207,10 +209,23 @@[m [mp.show()[m
 Translation[m
 -----------[m
 [m
[31m-Want to translate Painterro into your language? Just open file [js/translation.js](https://github.com/ivictbor/painterro/blob/master/js/translation.js#L6), copy `this.translations` dict to text editor and[m
[31m- translate all `'Strings'`. Then fork and create pull-request, or just open [issue](https://github.com/ivictbor/painterro/issues)[m
[31m- if you don't know how to create a PR.[m
[32m+[m[32mWant to translate Painterro into your language?[m
[32m+[m[32m If you need English, Spanish or Catalan language,[m
[32m+[m[32m you should pass `language` parameter, for example:[m
[32m+[m[41m [m
[32m+[m[32m```js[m
[32m+[m[32mPainterro({[m
[32m+[m[32m  language: 'es'[m
[32m+[m[32m}).show()[m
[32m+[m[32m```[m
[32m+[m[32m`language` can have next values:[m
[32m+[m[32m* `en` - for using English language[m
[32m+[m[32m* `es` - for using Spanish language[m
[32m+[m[32m* `ca` - for using Catalan language[m
 [m
[32m+[m[32m If you want to add another language, then fork. Create file in folder langs for your translation and copy [langs/en.lang.js] in it. Then translate all `'Strings'` and add reference in [js/translation.js]. After that create pull-request, or just open [issue](https://github.com/ivictbor/painterro/issues)[m
[32m+[m[32m if you don't know how to create a PR.[m
[32m+[m[41m [m
 If you want to translate or change strings without contributing you can do this by passing [m
 `translation` parameter, for example:[m
 [m
[36m@@ -225,7 +240,7 @@[m [mPainterro({[m
   }[m
 }).show()[m
 ```[m
[31m-For all strings that can be translated, see `js/translation.js`[m
[32m+[m[32mFor all strings that can be translated, see [langs/en.lang.js][m[41m [m
     [m
 [m
 Saving image[m
[1mdiff --git a/build/index.html b/build/index.html[m
[1mindex 8b46b00..f42b1d5 100644[m
[1m--- a/build/index.html[m
[1m+++ b/build/index.html[m
[36m@@ -53,12 +53,16 @@[m
       console.log('Something drawed: ', state);[m
      // localStorage.setItem('painterroImage', this.imageSaver.asDataURL())[m
     },[m
[31m-    language: 'ca',[m
[32m+[m[32m   language: 'ca',[m
    availableLineWidths: [1,2,4,8,16,64],[m
    availableEraserWidths: [1,2,4,8,16,64],[m
    availableFontSizes: [1,2,4,8,16,64],[m
 [m
[31m-  [m
[32m+[m[32m    /*undoHandler: () => {//issure[m
[32m+[m[32m      console.log('undo')[m
[32m+[m[32m    }*/[m
[32m+[m
[32m+[m
     //toolbarPosition: 'top',[m
     // fixMobilePageReloader: false,[m
     // defaultTool: 'line',[m
[1mdiff --git a/js/params.js b/js/params.js[m
[1mindex 991ae57..e9a390e 100644[m
[1m--- a/js/params.js[m
[1m+++ b/js/params.js[m
[36m@@ -37,12 +37,10 @@[m [mfunction firstDefined(...vals) {[m
 }[m
 [m
 export function setDefaults(parameters) {[m
[31m-  [m
   loadSettings();[m
[31m-[m
   const params = parameters || {};[m
   if (params.language) {[m
[31m-    activate(params.language)[m
[32m+[m[32m    activate(params.language);[m
   }[m
   params.activeColor = settings.activeColor || params.activeColor || '#ff0000';[m
   params.activeColorAlpha = firstDefined(settings.activeColorAlpha, params.activeColorAlpha, 1.0);[m
[1mdiff --git a/js/translation.js b/js/translation.js[m
[1mindex 4d418be..3d1057c 100644[m
[1m--- a/js/translation.js[m
[1m+++ b/js/translation.js[m
[36m@@ -11,9 +11,7 @@[m [mexport default class Translation {[m
       es: esl,[m
       ca: cal,[m
     };[m
[31m-   this.defaultTranslator = this.translations.en;[m
[31m-   //this.activate('ca');[m
[31m-    [m
[32m+[m[32m    this.defaultTranslator = this.translations.en;[m
   }[m
 [m
   static get() {[m
[36m@@ -29,16 +27,8 @@[m [mexport default class Translation {[m
   }[m
 [m
   activate(trans) {[m
[31m-[m
[31m-    console.log('-------',trans);[m
[31m-[m
[31m-[m
[31m-[m
[31m-    console.log('+++++++',this.translations, this.translations[trans]);[m
     if (this.translations[trans] !== undefined) {[m
       this.trans = trans;[m
[31m-      console.log('++++++++',this.translations[trans]);[m
[31m-     // console.log('------');[m
       this.translator = this.translations[this.trans];[m
     } else {[m
       this.translator = this.defaultTranslator;[m
[36m@@ -58,11 +48,9 @@[m [mexport default class Translation {[m
     return res || fallbackRes;[m
   }[m
 }[m
[31m-[m
 export function activate(a) {[m
   return Translation.get().activate(a);[m
 }[m
[31m-[m
 export function tr(n) {[m
   return Translation.get().tr(n);[m
 }[m
[1mdiff --git a/js/worklog.js b/js/worklog.js[m
[1mindex f24a8c0..e27dbec 100644[m
[1m--- a/js/worklog.js[m
[1m+++ b/js/worklog.js[m
[36m@@ -7,7 +7,7 @@[m [mexport default class WorkLog {[m
     this.clean = true;[m
     this.ctx = main.ctx;[m
   }[m
[31m-[m
[32m+[m[32m  // this.main.settings.undoHandler()[m
   getWorklogAsString(params) {[m
     const saveState = Object.assign({}, this.current);[m
     let curCleared = this.clearedCount;[m
